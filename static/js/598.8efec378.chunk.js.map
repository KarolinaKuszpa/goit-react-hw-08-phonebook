{"version":3,"file":"static/js/598.8efec378.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","Pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\",\"error\":\"ContactForm_error__C1smZ\",\"container\":\"ContactForm_container__qpJ1N\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { saveContact } from '../../redux/contacts/operations';\nimport styles from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (name.trim() === '' || number.trim() === '') {\n      return;\n    }\n\n    dispatch(saveContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={styles.container}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={name}\n          name=\"name\"\n          pattern=\"^^[A-Za-z.'\\- ]+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={e => setName(e.target.value)}\n          className={styles.input}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Phone Number\"\n          value={number}\n          pattern=\"^\\+?\\d{1,4}?\\s?\\(?\\d{1,4}?\\)?\\s?\\d{1,4}\\s?\\d{1,4}\\s?\\d{1,9}$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={e => setNumber(e.target.value)}\n          className={styles.input}\n        />\n        <button className={styles.addContactBtn} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts, deleteContact } from '../../redux/contacts/operations';\nimport styles from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.contacts.filter);\n\n  useEffect(() => {\n    const fetchContactsFromBackend = async () => {\n      dispatch(fetchContacts()); // Pobieranie kontaktów z backendu przy montowaniu komponentu\n    };\n\n    fetchContactsFromBackend(); // Pobieranie kontaktów z backendu przy montowaniu komponentu\n  }, [dispatch]);\n\n  //filtrowanie kontaktów na podstawie wartości filtra\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <div className={styles.container}>\n      <ul className={styles.contactList}>\n        {filteredContacts.map(contact => (\n          <li key={contact.id} className={styles.contactItem}>\n            <span className={styles.contactName}>{contact.name}</span>\n            <span className={styles.contactNumber}>{contact.number}</span>\n            <button\n              className={styles.deleteBtn}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllTasks = state => state.contacts.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ filter, handleFilterChange }) => {\n  return (\n    <div className={styles.container}>\n      <input\n        className={styles.input}\n        type=\"text\"\n        placeholder=\"Search contacts...\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport { selectLoading, selectFilter } from 'redux/contacts/selectors';\nimport Filter from '../components/Filter/Filter';\nimport { setFilter } from '../redux/contacts/contactsSlice';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactForm />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["dispatch","useDispatch","useState","name","setName","number","setNumber","className","styles","onSubmit","event","preventDefault","trim","saveContact","type","placeholder","value","pattern","title","required","onChange","e","target","contacts","useSelector","state","filter","useEffect","fetchContactsFromBackend","fetchContacts","filteredContacts","contact","toLowerCase","includes","map","onClick","contactId","id","deleteContact","selectLoading","loading","selectFilter","handleFilterChange","Contacts","isLoading","Helmet","setFilter"],"sourceRoot":""}